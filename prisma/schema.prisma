// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Band {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  foundedAt Int?

  albums Album[]
  groupMembers GroupMember[]
}

model Album {
  id Int @id @default(autoincrement())
  title String @db.VarChar(255)
  year Int

  bandId Int

  tracks Track[]

  genres Genre[] @relation("AlbumGernePivot")
  band Band @relation(fields: [bandId], references: [id])

}

model Genre {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  
  albuns Album[] @relation("AlbumGernePivot")
}

model Track {
  id Int @id @default(autoincrement())
  title String @db.VarChar(255)
  length Int

  albumId Int
  trackNumber Int?

  album Album @relation(fields: [albumId], references: [id])
}


model GroupMember {
  id Int @id @default(autoincrement())
  joined Int
  left DateTime? @db.Date

  bandId Int
  band Band @relation(fields: [bandId], references: [id])
 
  musicianId Int
  musician Musician @relation(fields: [musicianId], references: [id])

}

model Musician {
  id Int @id @default(autoincrement())
  firstName String @db.VarChar(255)
  lastName String @db.VarChar(255)
  birthDate DateTime? @db.Date

  groupMembers GroupMember[]
}

model account {
  id Int @id @default(autoincrement())
  username String @db.VarChar(255)
  password String @db.VarChar(255)
  role Role @default(USER)
  favoriteColor String? @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}